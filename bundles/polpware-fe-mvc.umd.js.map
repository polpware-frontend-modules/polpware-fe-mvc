{"version":3,"file":"polpware-fe-mvc.umd.js","sources":["ng://@polpware/fe-mvc/lib/mediators/noop-view-instance.ts","ng://@polpware/fe-mvc/lib/mediators/abstract-list.ts","ng://@polpware/fe-mvc/lib/mediators/ngstore-abstract-list.ts","ng://@polpware/fe-mvc/lib/mediators/writable-abstract-list.ts","ng://@polpware/fe-mvc/lib/mediators/rxjs-powered-writable-abstract-list.ts","ng://@polpware/fe-mvc/lib/controllers/list-controller.ts"],"sourcesContent":["import * as dependencies from '@polpware/fe-dependencies';\r\n\r\nimport { IViewInstance } from './interfaces';\r\n\r\nconst _ = dependencies.underscore;\r\nconst noop = _.noop;\r\n\r\nexport const noopViewInstance: IViewInstance = {\r\n    $data: {\r\n        init: noop,\r\n        setRefreshCallback: noop,\r\n        setInfiniteCallback: noop,\r\n        clean: noop,\r\n        asyncPush: noop,\r\n        syncPush: noop,\r\n        asyncPop: noop,\r\n        syncPop: noop,\r\n        asyncPrepend: noop,\r\n        syncPrepend: noop,\r\n        asyncRefresh: noop,\r\n        syncRefresh: noop,\r\n        hasMoreData: noop,\r\n        getItems: noop,\r\n        setupSearch: noop,\r\n        updateSearchCriteria: noop,\r\n        getAncestor: noop\r\n    },\r\n    $loader: {\r\n        show: noop,\r\n        hide: noop\r\n    },\r\n    $refresher: {\r\n        show: noop,\r\n        hide: noop\r\n    },\r\n    $moreLoader: {\r\n        show: noop,\r\n        hide: noop\r\n    },\r\n    $router: {\r\n        go: noop\r\n    },\r\n    $render: {\r\n        ready: noop,\r\n        destroy: noop,\r\n        asyncDigest: noop\r\n    },\r\n    $navBar: {\r\n        /**\r\n         * Get current state\r\n         * @returns {}\r\n         */\r\n        getState: noop,\r\n        /**\r\n         * Set state\r\n         * @param {Boolean} s\r\n         */\r\n        setState: noop\r\n    },\r\n    $modal: {\r\n        setData: noop,\r\n        getData: noop,\r\n        build: noop\r\n    },\r\n    $popover: {\r\n        setData: noop,\r\n        getData: noop,\r\n        build: noop,\r\n        onHidden: noop\r\n    },\r\n    $popup: {\r\n        setData: noop,\r\n        getData: noop,\r\n        build: noop,\r\n        confirm: noop,\r\n        prompt: noop,\r\n        alert: noop\r\n    },\r\n    $progressBar: {\r\n        create: noop,\r\n        reset: noop,\r\n        createInfinite: noop,\r\n        onProgress: noop,\r\n        destroy: noop,\r\n        destroyInfinite: noop,\r\n        showAbort: noop\r\n    },\r\n    $alertify: noop,\r\n    $history: {\r\n        goBack: noop\r\n    }\r\n};\r\n","/**\n * @fileOverview\n * An mediator (named after the mediator pattern)\n * which coordinates views and controllers.\n * We support the following use cases:\n * 1. A page is first time loaded and then rendered\n * 2. A page is refreshed by pulling down\n * 3. A page is rendered with more data\n * 4. A page is updated after some state has changed\n *\n * Note that this is an sbtract class; you cannot create an instance of it.\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nconst ClassBuilder = dependencies.Class;\n\nimport { lift as liftIntoPromise, tojQueryDeferred } from '@polpware/fe-utilities';\n\nimport { IViewInstance } from './interfaces';\nimport { noopViewInstance } from './noop-view-instance';\n\nconst _ = dependencies.underscore;\n\nexport interface IListMediatorCtorOptions {\n    dataProvider?: any;\n    dataParams?: any;\n    deepCopy?: boolean;\n    useModel?: boolean;\n    enableRefresh: boolean;\n    enableInfinite: boolean;\n}\n\nexport interface IListMediatorPublic {\n\n    dataProvider(value?: any): any;\n    dataParams(value?: any): any;\n\n    viewInsance(value?: IViewInstance): IViewInstance;\n\n    startService(viewInsance: IViewInstance, fromCache?: boolean): void;\n    stopService(): void;\n\n    loadInitData(): PromiseLike<any>;\n    refresh(isProgramatic?: boolean): PromiseLike<any>;\n    loadMore(): PromiseLike<any>;\n\n    renderData(async?: boolean): void;\n\n    setUp(options?: any): void;\n    tearDown(): void;\n}\n\nexport interface IListMediatorDev extends IListMediatorPublic {\n    _settings: IListMediatorCtorOptions;\n    _viewInstance: IViewInstance;\n    _dataProvider: any;\n    _dataParams: any;\n    _deepCopy: boolean;\n    _useModel: boolean;\n    _enableRefresh: boolean;\n    _enableInfinite: boolean;\n\n    _stateContext: any;\n\n    _isInit: boolean;\n    _isLoadingData: boolean;\n\n    safelyReadDataProvider(): any[];\n    generateItemsInternal(collection: any): any[];\n\n    onUpdateView(evt: any): any;\n    generateItems(async?: boolean): void;\n\n    _defaultStartService(): void;\n\n    attachView(viewInstance): void;\n    detachView(): void;\n\n    startServiceImpl(): void;\n}\n\nexport const ListMediator = ClassBuilder.extend({\n\n    Properties: 'dataProvider,dataParams,deepCopy,useModel,enableRefresh,enableInfinite,onUpdateView,viewInstance',\n\n    init: function(settings: IListMediatorCtorOptions) {\n        const self: IListMediatorDev = this;\n        self._settings = settings;\n        self._viewInstance = noopViewInstance;\n        self._dataProvider = settings.dataProvider || null;\n        self._dataParams = settings.dataParams || {};\n        self._deepCopy = settings.deepCopy || false;\n        self._useModel = settings.useModel || false;\n        self._enableRefresh = settings.enableRefresh || false;\n        self._enableInfinite = settings.enableInfinite || false;\n\n        self._stateContext = {};\n        self._isInit = true;\n        self._isLoadingData = false;\n    },\n\n    generateItemsInternal: function(collection): any[] {\n        const self: IListMediatorDev = this;\n        const newData = [];\n        if (self._useModel) {\n            collection.forEach(function(item) {\n                newData.push(item);\n            });\n        } else if (self._deepCopy) {\n            collection.forEach(function(item) {\n                newData.push(_.extend({}, item.attributes));\n            });\n        } else {\n            collection.forEach(function(item) {\n                newData.push(item.attributes);\n            });\n        }\n        return newData;\n    },\n\n\n    /**\n     * Computes the set of models in the current data provider.\n     * Note that we support all kinds of data providers, backbone\n     * or something similar backbone.\n     * Moreover, this method may be overriden.\n     * @returns {Array}\n     */\n    safelyReadDataProvider: function(): any[] {\n        const self: IListMediatorDev = this;\n        let models: any;\n        if (self._dataProvider.models) {\n            models = self._dataProvider.models;\n        } else {\n            models = [];\n            self._dataProvider.forEach(function(oneItem) {\n                models.push(oneItem);\n            });\n        }\n        return models;\n    },\n\n    /**\n     * Generates the items for the view\n     * Note that we only perform the checking in this method;\n     * it is Not necessary to peform this kind of checking in other overriden generateItems.\n     * @param {Boolean} async\n     * @returns {}\n     */\n    generateItems: function(async): void {\n        const self: IListMediatorDev = this;\n        const $data = self._viewInstance.$data;\n        const models = self.safelyReadDataProvider();\n        const newData = self.generateItemsInternal(models);\n        // newData is ready\n        if (async === true) {\n            self.onUpdateView({\n                add: true,\n                source: 'remote',\n                data: newData\n            });\n            $data.asyncPush(newData);\n        } else {\n            self.onUpdateView({\n                add: true,\n                source: 'cache',\n                data: newData\n            });\n            $data.syncPush(newData);\n        }\n    },\n\n    /**\n     * Load the first page of data from the server,\n     * without any loading indicator;\n     * This method is used internally.\n     * @function loadInitData\n     * @returns {Promise}\n     */\n    loadInitData: function(): PromiseLike<any> {\n        const self: IListMediatorDev = this;\n\n        const dataProvider = self._dataProvider;\n        // We must reset data beforehand\n        dataProvider.reset();\n        // There are side effects if a parameter is passed in get*page\n        // Therefore, we need to clone a new copy of this parameter\n        self._isLoadingData = true;\n\n        const dataParams = self._dataParams;\n        let promise = dataProvider.getFirstPage({ data: _.extend({}, dataParams) });\n        promise = tojQueryDeferred(promise);\n        promise.always(function() {\n            self._isInit = false;\n            self._isLoadingData = false;\n        });\n\n        return promise.then(function() {\n            const $data = self._viewInstance.$data;\n            $data.clean();\n            $data.hasMoreData(dataProvider.hasNextPage());\n            self.generateItems(true /*aync*/);\n            // To ensure that isLoadingData happends very late.\n        });\n    },\n\n    /**\n     * Render data without any loading operations. By default, this is invoked\n     * in the context of non-async mode.\n     * @param {Boolean} async\n     * @function renderData\n     */\n    renderData: function(async?: boolean): void {\n        const self: IListMediatorDev = this;\n        const $data = self._viewInstance.$data;\n        $data.clean();\n        $data.hasMoreData(self._dataProvider.hasNextPage());\n        self.generateItems(async === true);\n    },\n\n    /**\n     * Reloads data as the result of pulling down operation.\n     * It assumes that the user has pulled down the page, thus resetting the refreshing\n     * indicator at the end.\n     * @param isProgramatic {Boolean} Indicates if this invocation\n     * is due to an internal call, without user interaction.\n     * @function refresh\n     */\n    refresh: function(isProgramatic?: boolean): PromiseLike<any> {\n        const self: IListMediatorDev = this;\n        const $data = self._viewInstance.$data;\n        const $refresher = self._viewInstance.$refresher;\n        $data.hasMoreData(true);\n        // Refresh loader\n        $refresher.show(isProgramatic);\n        const prms = self.loadInitData();\n        const anotherP = tojQueryDeferred(prms);\n        return anotherP.always(function() {\n            $refresher.hide(isProgramatic);\n        });\n    },\n\n    /**\n     * Loads more data as the result of scrolling down.\n     * It assumes that the user has scroll down enough, thus resetting the loading more\n     * indicator at the end.\n     * @function loadMore\n     */\n    loadMore: function(): PromiseLike<any> {\n\n        const self: IListMediatorDev = this;\n        const dataProvider = self._dataProvider;\n        const dataParams = self._dataParams;\n        const $data = self._viewInstance.$data;\n        const $moreLoader = self._viewInstance.$moreLoader;\n\n        // loadMore may be issued before init\n        if (self._isInit) {\n            return liftIntoPromise(true, null);\n        }\n\n        if (self._isLoadingData) {\n            // We do not disable infinite scroll complete ...\n            // because we want to prevent from two time loadMore\n            // and one disable finally is sufficient to remove inifinite scroll indicator.\n            return liftIntoPromise(true, null);\n        }\n\n        if (!dataProvider.hasNextPage()) {\n            $data.hasMoreData(false);\n            return liftIntoPromise(true, null);\n        }\n\n        $moreLoader.show();\n\n        // We must clone a copy dataParams, as there are side\n        // effects in this parameter\n        self._isLoadingData = true;\n        const prms = dataProvider.getNextPage({ data: _.extend({}, dataParams) }).then(function() {\n            $data.hasMoreData(dataProvider.hasNextPage());\n            self.generateItems(true /* async */);\n            // To ensure that isLoading happends very later, we have to put isLoading in two functions.\n            self._isLoadingData = false;\n        }, function() {\n            self._isLoadingData = false;\n        });\n        const anotherP = tojQueryDeferred(prms);\n\n        return anotherP.always(function() {\n            $moreLoader.hide();\n        });\n    },\n\n    /**\n     * Check if the context for the data provider has changed, for\n     * the purpose of deciding if we need to reload data.\n     * @function stateChanged\n     * @returns {Boolean}\n     */\n    stateChanged: function() {\n        const stateContext = this._stateContext;\n        if (stateContext.enableSearch === true) {\n            return stateContext.searchModel.isConfirmed() && stateContext.searchModel.hashCode() !== stateContext.searchCriteria.hashCode;\n        }\n        return true;\n    },\n\n    /**\n     * Updates state and reload data, with loading indicator if set\n     * @function updateStateAndReload\n     */\n    updateStateAndReload: function() {\n        const self = this;\n        const stateContext = self._stateContext;\n        const $data = self._viewInstance.$data;\n        const $loader = self._viewInstance.$loader;\n        if (stateContext.enableSearch === true) {\n            stateContext.searchCriteria = stateContext.searchModel.generateFilter();\n            self.dataParams(stateContext.searchCriteria.filter);\n            $data.updateSearchCriteria(stateContext.searchCriteria);\n        }\n        $loader.show();\n        const prms = self.loadInitData();\n        const anotherP = tojQueryDeferred(prms);\n\n        anotherP.always(function() {\n            $loader.hide();\n        });\n    },\n\n    /**\n     * Sets up context and hooks up data with view.\n     * This method is only invoked once and should be one of the steps following constructor.\n     * In other words, it is part of a constructor.\n     * @param {Object} options\n     */\n    setUp: function(options) {\n        const self = this;\n\n        options = options || {};\n\n        if (options.enableSearch) {\n            self._stateContext.enableSearch = true;\n            // We expect the following properties\n            // chai.expect(options).to.have.property('searchSettings');\n            // chai.expect(options.searchSettings).to.have.property('searchModel');\n            // chai.expect(options.searchSettings).to.have.property('searchModelGuid');\n            // chai.expect(options.searchSettings).to.have.property('searchURL');\n            // Create our state context\n            // Keep the search settings into the state context,\n            // because these settings are used later for deciding if we\n            // need to recompute data parameters or not\n            const searchSettings = options.searchSettings;\n            self._stateContext.searchURL = searchSettings.searchURL;\n            self._stateContext.searchModelGuid = searchSettings.searchModelGuid;\n            self._stateContext.searchModel = searchSettings.searchModel;\n            self._stateContext.searchCriteria = searchSettings.searchModel.generateFilter();\n            self.dataParams(self._stateContext.searchCriteria.filter);\n        }\n    },\n\n    /**\n     * A destructor.\n     */\n    tearDown: function() {\n        const self: IListMediatorDev = this;\n        if (self._dataProvider && self._dataProvider.off) {\n            // Discard all listening\n            self._dataProvider.off('all');\n            // Discard all data\n            self._dataProvider.reset();\n        }\n    },\n\n    /**\n     * Start to bind a view to this mediator.\n     */\n    attachView: function(viewInstance): void {\n        const self: IListMediatorDev = this;\n        self._viewInstance = viewInstance;\n\n        const $data = self._viewInstance.$data;\n        if (self._enableRefresh) {\n            $data.setRefreshCallback(function() {\n                self.refresh();\n            });\n        }\n        if (self._enableInfinite) {\n            $data.setInfiniteCallback(function() {\n                self.loadMore();\n            });\n        }\n        if (self._stateContext.enableSearch) {\n            $data.setupSearch(self._stateContext.searchCriteria, function() {\n                self._viewInstance.$router.go(self._stateContext.searchURL, {\n                    dataId: self._stateContext.searchModelGuid\n                });\n            });\n        }\n\n        $data.init();\n    },\n\n    detachView: function(): void {\n        const self: IListMediatorDev = this;\n        self._viewInstance = noopViewInstance;\n    },\n\n    _defaultStartService: function(): void {\n        const self: IListMediatorDev = this;\n        const $loader = self._viewInstance.$loader;\n        $loader.show();\n        const promise = self.loadInitData();\n        const anotherP = tojQueryDeferred(promise);\n        anotherP.always(function() {\n            $loader.hide();\n        });\n    },\n\n    /**\n     * This method needs to be overrided.\n     */\n    startServiceImpl: function(): void {\n        const self: IListMediatorDev = this;\n        self._defaultStartService();\n    },\n\n    startService: function(viewInsance: IViewInstance, fromCache?: boolean): void {\n        const self: IListMediatorDev = this;\n        self.attachView(viewInsance);\n        if (fromCache === true) {\n            self.renderData();\n        } else {\n            self.startServiceImpl();\n        }\n    },\n\n    stopService: function(): void {\n        const self = this;\n        self.detachView();\n    }\n\n});\n\n\n\n\n\n\n\n","import {\r\n    ICollectionItem, ICollectionStore\r\n} from '@polpware/fe-data';\r\n\r\n\r\nimport {\r\n    ListMediator,\r\n    IListMediatorCtorOptions,\r\n    IListMediatorPublic,\r\n    IListMediatorDev\r\n} from './abstract-list';\r\n\r\nexport {\r\n    IListMediatorCtorOptions,\r\n} from './abstract-list';\r\n\r\nexport interface INgStoreListMediatorPublic extends IListMediatorPublic {\r\n    setNgStore<T extends ICollectionItem>(store: ICollectionStore<T>): void;\r\n    getNgStore<T extends ICollectionItem>(): ICollectionStore<T>;\r\n}\r\n\r\nexport interface INgStoreListMediatorDev extends IListMediatorDev {\r\n    _ngStore: ICollectionStore<any>;\r\n    _super(value?: any): any;\r\n}\r\n\r\nexport const NgStoreListMediator = ListMediator.extend({\r\n\r\n    init: function(settings: IListMediatorCtorOptions) {\r\n        const self: INgStoreListMediatorDev = this;\r\n        self._super(settings);\r\n        self._ngStore = null;\r\n    },\r\n\r\n    setNgStore: function <T extends ICollectionItem>(store: ICollectionStore<T>): void {\r\n        const self: INgStoreListMediatorDev = this;\r\n        self._ngStore = store;\r\n    },\r\n\r\n    getNgStore: function <T extends ICollectionItem>(): ICollectionStore<T> {\r\n        const self: INgStoreListMediatorDev = this;\r\n        return self._ngStore;\r\n    },\r\n\r\n    safelyReadDataProvider: function(): any[] {\r\n        const self: INgStoreListMediatorDev = this;\r\n        const models = self._super();\r\n        // Safely push these models into view level data provider\r\n        self._ngStore.add(models);\r\n        // Then return\r\n        return models;\r\n    },\r\n\r\n    /**\r\n     * Override.\r\n     * This method uses the data from the ngstore, instead of the\r\n     * the current remote data provider, to generate the list of data\r\n     * to be rendered.\r\n     */\r\n    renderData: function(async?: boolean) {\r\n        const self: INgStoreListMediatorDev = this;\r\n        const $data = self._viewInstance.$data;\r\n        $data.clean();\r\n        $data.hasMoreData(self._dataProvider.hasNextPage());\r\n\r\n        const subscription = self._ngStore.getState().subscribe(savedData => {\r\n\r\n            const newData = self.generateItemsInternal(savedData.items);\r\n            if (async === true) {\r\n                $data.asyncPush(newData);\r\n            } else {\r\n                $data.syncPush(newData);\r\n            }\r\n\r\n            setTimeout(() => {\r\n                subscription.unsubscribe();\r\n            }, 1);\r\n        });\r\n    }\r\n\r\n});\r\n","/**\n * @fileOverview\n * This module implements a list mediator that may quickly\n * get updated on any operation in this list.\n * E.g., add, remove, update\n */\n\n\nimport * as dependencies from '@polpware/fe-dependencies';\nimport {\n    ListMediator,\n    IListMediatorCtorOptions,\n    IListMediatorPublic,\n    IListMediatorDev\n} from './abstract-list';\n\nconst _ = dependencies.underscore;\nconst backbone = dependencies.backbone;\n\nexport interface IChangeSet {\n    changes: {\n        added: any[],\n        removed: any[],\n        merged: any[]\n    };\n}\n\nexport interface IWritableListMediatorCtorOptions\n    extends IListMediatorCtorOptions {\n    globalProvider?: any;\n    filterFlags?: {\n        added?: boolean,\n        removed?: boolean,\n        updated?: boolean\n    };\n}\n\nexport interface IWritableListMediatorPublic\n    extends IListMediatorPublic {\n\n    viewLevelData(value?: any): any;\n    globalProvider(value?: any): any;\n\n    globalProviderFilter(evtCtx: any, changeSet: IChangeSet, rest: any): IChangeSet;\n}\n\nexport interface IWritableListMediatorDev extends IListMediatorDev {\n    _viewLevelData: any;\n    _viewProviderListeners: any;\n    _globalProvider: any;\n    _globalProviderListeners: any;\n    _filterFlags: {\n        added?: boolean,\n        removed?: boolean,\n        updated?: boolean\n    };\n\n    _super(value?: any): any;\n\n    globalProviderFilter(evtCtx: any, changeSet: IChangeSet, rest: any): IChangeSet;\n    onGlobalProviderUpdate();\n\n    onViewProviderUpdate(evtCtx: any, changeSet: IChangeSet, rest: any): void;\n\n    startListeningGlobalProvider(globalProvider);\n    stopListeningGlobalProvider();\n\n    startListeningViewProvider();\n    stopListeningViewProvider();\n\n    findAtIndex(newModel: any): number;\n}\n\nexport const WritableListMediator = ListMediator.extend({\n\n    Properties: 'viewLevelData,globalProvider',\n\n    init: function(settings: IWritableListMediatorCtorOptions) {\n        const self: IWritableListMediatorDev = this;\n        self._super(settings);\n\n        const CollectionCtor = backbone.Collection.extend();\n        self._viewLevelData = new CollectionCtor();\n        self._viewProviderListeners = {};\n        self._globalProvider = settings.globalProvider || null;\n        self._globalProviderListeners = {};\n        self._filterFlags = settings.filterFlags || { added: true, removed: true, updated: true };\n    },\n\n    /**\n     * A filter on the global data provider.\n     * @returns {Boolean}\n     */\n    globalProviderFilter: function(evtCtx: any, changeSet: IChangeSet, rest: any): IChangeSet {\n        /*jslint unparam:true */\n        const self: IWritableListMediatorDev = this;\n        if (self._filterFlags.added &&\n            changeSet.changes.added &&\n            changeSet.changes.added.length > 0) {\n            return changeSet;\n        }\n        if (self._filterFlags.removed &&\n            changeSet.changes.removed &&\n            changeSet.changes.removed.length > 0) {\n            return changeSet;\n        }\n        if (self._filterFlags.updated &&\n            changeSet.changes.merged &&\n            changeSet.changes.merged.length > 0) {\n            return changeSet;\n        }\n        return null;\n    },\n\n\n    findAtIndex: function(newModel): number {\n        return -1;\n    },\n\n    /**\n     * An internal method for listening to any change on the\n     * global provider. Listening to the sole update event is\n     * sufficient and efficent.\n     * @param {Object} args\n     */\n    onGlobalProviderUpdate: function() {\n        /*jslint unparam:true */\n        const self: IWritableListMediatorDev = this;\n        const args = arguments;\n\n        // If we are loading data, the data we are receiving is\n        // the result of the current loading behavior.\n        // We do not need to do anything. Instead, the loading behavior\n        // is responsible for rending data.\n        if (self._isLoadingData) {\n            return;\n        }\n        // Shortcircuit\n        const changeSet = self.globalProviderFilter.apply(self, args);\n        if (!changeSet) {\n            return;\n        }\n        // The interface of changeSet is determined by the above filter\n        // method. However, the below view provider listener must be careful.\n        // Changes\n        if (changeSet.add) {\n            const candidate = _.filter(changeSet.changes.added, function(thisItem) {\n                return !_.some(self._viewLevelData.models, function(thatItem) {\n                    return thisItem.id === thatItem.id;\n                });\n            });\n            if (candidate.length > 0) {\n                _.each(candidate, function(v, k) {\n                    const atIndex = self.findAtIndex(v);\n                    if (atIndex !== -1) {\n                        self._viewLevelData.add(v, { at: atIndex });\n                    } else {\n                        self._viewLevelData.add(v);\n                    }\n                });\n            }\n        }\n        if (changeSet.remove) {\n            self._viewLevelData.remove(changeSet.changes.removed);\n        }\n        if (changeSet.merge) {\n            // Keep propagating\n            self._viewLevelData.trigger('update', changeSet.changes);\n        }\n    },\n\n    /**\n     * An internal method for listening to the change on the view\n     * data provider. Usually, such kind of listening shall be stopped\n     * when there is no view binding to the current midiator list.\n     * @param {Object} args\n     */\n    onViewProviderUpdate: function(evtCtx: any, changeSet: IChangeSet, rest: any): void {\n        /*jslint unparam:true */\n        const self: IWritableListMediatorDev = this;\n        const $data = self._viewInstance.$data;\n        let newData: any;\n        // Note that the interface of changeSet varies from\n        // events to events in Backbone. We have to be very careful.\n        if (changeSet.changes.added && changeSet.changes.added.length > 0) {\n            // Check if we have data or not\n            newData = self.generateItemsInternal(changeSet.changes.added);\n            self.onUpdateView({\n                add: true,\n                source: 'event',\n                data: newData\n            });\n            $data.asyncPrepend(newData);\n        }\n        if (changeSet.changes.removed && changeSet.changes.removed.length > 0) {\n            newData = self.generateItemsInternal(changeSet.changes.removed);\n            self.onUpdateView({\n                remove: true,\n                source: 'event',\n                data: newData\n            });\n            $data.asyncPop(newData);\n        }\n        if (changeSet.changes.merged && changeSet.changes.merged.length > 0) {\n            newData = self.generateItemsInternal(changeSet.changes.merged);\n            self.onUpdateView({\n                merge: true,\n                source: 'event',\n                data: newData\n            });\n            $data.asyncRefresh(newData);\n        }\n    },\n\n    /**\n     * Override.\n     * So that we can clean up the view data.\n     */\n    loadInitData: function() {\n        const self: IWritableListMediatorDev = this;\n        self._viewLevelData.reset();\n        return self._super();\n    },\n\n\n    /**\n     * Starts to listen to the change on the global provider.\n     * It is usually used internally on setting up this mediator.\n     * @param {Object} globalProvider\n     */\n    startListeningGlobalProvider: function(globalProvider) {\n        const self: IWritableListMediatorDev = this;\n        const onUpdate = function() {\n            const args = arguments;\n            // We have to schedule such update so that some other operations can\n            // been completed first. E.g., getForeignModel should be set up.\n            _.defer(function() {\n                self.onGlobalProviderUpdate.apply(self, args);\n            });\n        };\n        self._globalProviderListeners = {\n            update: onUpdate\n        };\n        self._globalProvider = globalProvider;\n        globalProvider.on('update', onUpdate);\n    },\n\n    /**\n     * Stops listening to the change on the global provider.\n     * It is usally used on the tearing down this mediator.\n     */\n    stopListeningGlobalProvider: function() {\n        const self: IWritableListMediatorDev = this;\n        const listeners = self._globalProviderListeners;\n        const globalProvider = self._globalProvider;\n        for (const key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                globalProvider.off(key, listeners[key]);\n            }\n        }\n    },\n\n    /**\n     * Start to listen to the change on the view data provider.\n     * This method is invoked on binding a view to this mediator.\n     */\n    startListeningViewProvider: function() {\n        const self: IWritableListMediatorDev = this;\n        const onUpdate = function(evtCtx, changeSet, rest) {\n            self.onViewProviderUpdate(evtCtx, changeSet, rest);\n        };\n        self._viewProviderListeners = {\n            update: onUpdate\n        };\n        self._viewLevelData.on('update', onUpdate);\n    },\n\n    /**\n     * Stops listening to the change on the view data provider.\n     * This method is invoked on unbinding a view to this mediator.\n     */\n    stopListeningViewProvider: function() {\n        const self: IWritableListMediatorDev = this;\n        const listeners = self._viewProviderListeners;\n        for (const key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                self._viewLevelData.off(key, listeners[key]);\n            }\n        }\n    },\n\n    /**\n     * Override.\n     * Compared its base counterpart, this method performs additional\n     * checking on generating data for the view module, so that no repeated\n     * items may be generated.\n     * Simply because, the data in the view level data is distinct.\n     * @returns {Array}\n     */\n    safelyReadDataProvider: function(): any[] {\n        const self: IWritableListMediatorDev = this;\n        let models = self._super();\n        models = _.filter(models, function(elem) {\n            return !_.some(self._viewLevelData.models, function(item) {\n                return item.id === elem.id;\n            });\n        });\n        // Safely push these models into view level data provider\n        self._viewLevelData.add(models, { silent: true });\n        // Then return\n        return models;\n    },\n\n    /**\n     * Override.\n     * This method uses the data from the view level data, instead of the\n     * the current remote data provider, to generate the list of data\n     * to be rendered.\n     */\n    renderData: function(async?: boolean) {\n        const self: IWritableListMediatorDev = this;\n        const $data = self._viewInstance.$data;\n        $data.clean();\n        $data.hasMoreData(self._dataProvider.hasNextPage());\n        const newData = self.generateItemsInternal(self._viewLevelData.models);\n        if (async === true) {\n            $data.asyncPush(newData);\n        } else {\n            $data.syncPush(newData);\n        }\n    },\n\n    /**\n     * Override\n     * @param {} options\n     */\n    setUp: function(options) {\n        const self: IWritableListMediatorDev = this;\n        self._super(options);\n        if (self._globalProvider) {\n            self.startListeningGlobalProvider(self._globalProvider);\n        }\n    },\n\n    /**\n     * Override\n     */\n    tearDown: function() {\n        const self: IWritableListMediatorDev = this;\n        // Call super\n        self._super();\n        // Tear off what we introduce in this class\n        self._viewLevelData.off('all');\n        self._viewLevelData.reset();\n        // Stop listening to the global\n        if (self._globalProvider) {\n            self.stopListeningGlobalProvider();\n        }\n    },\n\n    /**\n     * Override\n     */\n    attachView: function(viewInstance) {\n        const self: IWritableListMediatorDev = this;\n        self._super(viewInstance);\n        // Start to listen to changes on the view data provider.\n        self.startListeningViewProvider();\n    },\n\n    /**\n     * Override\n     */\n    detachView: function() {\n        const self: IWritableListMediatorDev = this;\n        self._super();\n        self.stopListeningViewProvider();\n    }\n});\n","import { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, buffer, map } from 'rxjs/operators';\n\nimport * as hInterface from '@polpware/fe-dependencies';\n\nimport { pushArray } from '@polpware/fe-utilities';\n\nimport {\n    IWritableListMediatorDev,\n    IChangeSet,\n    WritableListMediator,\n    IWritableListMediatorCtorOptions\n} from './writable-abstract-list';\n\nconst _ = hInterface.underscore;\n\nexport interface IRxjsPoweredDirContentMediatorDev extends IWritableListMediatorDev {\n    _emitEventDelay: number;\n    _globalSubr: Subscription;\n}\n\ninterface IFullChangeSet extends IChangeSet {\n    add: boolean;\n    remove: boolean;\n    merge: boolean;\n}\n\nfunction mergeArgs(data: any[]): IChangeSet {\n    const finalSet: IFullChangeSet = {\n        add: false,\n        remove: false,\n        merge: false,\n        changes: {\n            added: [],\n            removed: [],\n            merged: []\n        }\n    };\n    data.forEach((elem: any[]) => {\n        const changeSet: IChangeSet = elem[1];\n        if (changeSet.changes.added && changeSet.changes.added.length > 0) {\n            pushArray(finalSet.changes.added, changeSet.changes.added);\n            finalSet.add = true;\n        }\n        if (changeSet.changes.removed && changeSet.changes.removed.length > 0) {\n            pushArray(finalSet.changes.removed, changeSet.changes.removed);\n            finalSet.remove = true;\n        }\n        if (changeSet.changes.merged && changeSet.changes.merged.length > 0) {\n            pushArray(finalSet.changes.merged, changeSet.changes.merged);\n            finalSet.merge = true;\n        }\n    });\n\n    return finalSet;\n}\n\nexport const RxjsPoweredWritableListMediator = WritableListMediator.extend({\n    Properties: 'globalSubr, emitEventDelay',\n\n    init: function(settings: IWritableListMediatorCtorOptions) {\n        const self: IRxjsPoweredDirContentMediatorDev = this;\n        self._super(settings);\n        self._globalSubr = null;\n        self._emitEventDelay = 1000;\n    },\n\n    /**\n         * Starts to listen to the change on the global provider.\n         * It is usually used internally on setting up this mediator.\n         * @param {Object} globalProvider\n         */\n    startListeningGlobalProvider: function(globalProvider) {\n        const self: IRxjsPoweredDirContentMediatorDev = this;\n        self._globalProvider = globalProvider;\n\n        const eventObserver = fromEvent(globalProvider, 'update');\n        const ctrlObserver = eventObserver.pipe(debounceTime(self._emitEventDelay));\n\n        self._globalSubr = eventObserver.pipe(\n            buffer(ctrlObserver),\n            map((col) => {\n                const x = mergeArgs(col);\n                return x;\n            })\n        ).subscribe(args => {\n            self.onGlobalProviderUpdate.apply(self, [null, args]);\n        });\n    },\n\n    /**\n        * Stops listening to the change on the global provider.\n        * It is usally used on the tearing down this mediator.\n        */\n    stopListeningGlobalProvider: function() {\n        const self: IRxjsPoweredDirContentMediatorDev = this;\n        const globalProvider = self._globalProvider;\n        if (self._globalSubr) {\n            self._globalSubr.unsubscribe();\n            self._globalSubr = null;\n        }\n    }\n\n});\n\n","import * as dependencies from '@polpware/fe-dependencies';\n\nconst ClassBuilder = dependencies.Class;\n\n\nexport const ListControllerCtor = ClassBuilder.extend({\n\n    Defaults: {\n        MediatorCtor: null\n    },\n\n    Properties: 'mediator,settings',\n\n    /**\n     * Constructor\n     * @param {Object} settings\n     */\n    init: function(settings) {\n        var self = this;\n        // We expect the following properties\n\n        self._settings = settings;\n        self._isFirstTimeRendered = true;\n        self._mediator = settings.mediator || null;\n        self._mediatorFromCache = !!self._mediator;\n    },\n\n    initMediator: function() {\n        var self,\n            settings,\n            mediator,\n            MediatorCtor;\n        self = this;\n        if (self._mediator) {\n            return self;\n        }\n        settings = self._settings;\n        MediatorCtor = self.Defaults.MediatorCtor;\n        mediator = new MediatorCtor(settings);\n        // Setup mediator\n        self.setupMediator(mediator);\n\n        self._mediator = mediator;\n        return self;\n    },\n\n    setupMediator: function(mediator) {\n        mediator.setUp();\n    },\n\n    start: function() {\n        var self,\n            settings,\n            mediator;\n\n        self = this;\n        settings = self._settings;\n        mediator = self._mediator;\n\n        // Set up destroy\n        settings.$render.destroy(function() {\n            mediator.stopService();\n        });\n\n        settings.$render.ready(function() {\n            if (self._isFirstTimeRendered) {\n                self._isFirstTimeRendered = false;\n                mediator.startService(settings, self._mediatorFromCache);\n            }\n        });\n    }\n});\n\n"],"names":["dependencies.underscore","dependencies.Class","_","tojQueryDeferred","liftIntoPromise","dependencies.backbone","hInterface.underscore","pushArray","fromEvent","debounceTime","buffer","map","ClassBuilder"],"mappings":"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"}